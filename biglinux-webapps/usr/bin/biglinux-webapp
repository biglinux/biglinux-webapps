#!/usr/bin/env bash
#shellcheck disable=SC2155,SC2034,SC2154
#shellcheck source=/dev/null

#  /usr/bin/biglinux-webapp
#  Description: WebApps installing programs for BigLinux
#
#  Created: 2020/01/11
#  Altered: 2024/06/16
#
#  Copyright (c) 2023-2024, Vilmar Catafesta <vcatafesta@gmail.com>
#                2022-2023, Bruno Gonçalves <www.biglinux.com.br>
#                2022-2023, Rafael Ruscher <rruscher@gmail.com>
#                2020-2023, eltonff <www.biglinux.com.br>
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
#  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

APP="${0##*/}"
_VERSION_="1.0.0-20240616"
LIBRARY=${LIBRARY:-'/usr/share/bigbashview/bcc/shell'}
[[ -f "${LIBRARY}/bcclib.sh" ]] && source "${LIBRARY}/bcclib.sh"
[[ -f "${LIBRARY}/tinilib.sh" ]] && source "${LIBRARY}/tinilib.sh"
[[ -f "${LIBRARY}/weblib.sh" ]] && source "${LIBRARY}/weblib.sh"

function sh_biglinux_webapp_main {
	local parameters="$*"
	local paramClass="$1"
	local paramProfile="$2"
	local paramApp="$3"
	local paramBrowser="$4"
	local cache_dir="$USER_DATA_DIR"
	local url="${paramApp/--app=/}"
	local _session
	local browser_default
	local FOLDER
	local CLASS

	sh_webapp_check_dirs "$cache_dir"

	paramClass="${paramClass/,Chromium-browser/}"
	paramClass="${paramClass/--class=/}"
	paramClass="${paramClass/www./}"
	cache_dir+="/$paramClass"

	if [[ -z "$paramBrowser" ]]; then
		# Verifica se o arquivo .ini existe no HOME_FOLDER, senão executa um script de checagem dos navegadores
		if [[ -r "$INI_FILE_WEBAPPS" ]]; then
			# Verifica se o arquivo .ini tem algum browser default, senão executa um script de checagem dos navegadores
			if browser_default=$(TIni.Get "$INI_FILE_WEBAPPS" "browser" "short_name") && [[ -z "$browser_default" ]]; then
				browser_default=$(sh_webapp_check_browser)
			fi
		else
			browser_default=$(sh_webapp_check_browser)
		fi
	else
		browser_default="$paramBrowser"
		if ! sh_webapp_verify_browser "$paramBrowser"; then
			#notify-send -u critical --icon=webapps --app-name "$0" "$TITLE" "${Amsg[error_browser_config]}" --expire-time=2000
			yadmsg "${Amsg[error_browser_config]}"
			browser_default=$(sh_webapp_check_browser)
		fi
	fi

	_session="$(sh_get_desktop_session)"
#	FOLDER="$HOME_FOLDER_PROFILE/$paramClass"
	FOLDER="$HOME_FOLDER_PROFILE/$browser_default/$paramClass"
	CLASS="$paramClass"
	if [[ ! -d "$FOLDER" ]]; then
		mkdir -p "$FOLDER/chrome"
		cp -av "$WEBAPPS_PATH"/profile/userChrome.css "$FOLDER/chrome"
		cp -av "$WEBAPPS_PATH"/profile/user.js "$FOLDER"
	fi

	case "$browser_default" in
	firefox|org.mozilla.firefox|librewolf|io.gitlab.librewolf-community)
#		FOLDER=~/.var/app/io.gitlab.librewolf-community/data/netflix-webapp-biglinux-io.gitlab.librewolf-community
#		exec /var/lib/flatpak/exports/bin/io.gitlab.librewolf-community
#		FOLDER=~/.var/app/org.mozilla.firefox/data/netflix-webapp-biglinux-org.mozilla.firefox
#		exec /var/lib/flatpak/exports/bin/org.mozilla.firefox
		case "${_session^^}" in
			WAYLAND)
				MOZ_ENABLE_WAYLAND=1 \
			;;
		esac

#		XAPP_FORCE_GTKWINDOW_ICON=/usr/share/icons/hicolor/128x128/apps/webapp-netflix.svg \
		MOZ_APP_REMOTINGNAME="$CLASS" \
		MOZ_DISABLE_CONTENT_SANDBOX=1 \
		MOZ_DISABLE_GMP_SANDBOX=1 \
		PATH="/usr/local/bin:/usr/bin" \
		exec $browser_default \
			--class="$CLASS" \
			--profile "$FOLDER" \
			--user-data-dir="$cache_dir" \
			--no-remote \
			--new-instance "${paramApp/--app=/}"
		;;

	falkon)
		case "${_session^^}" in
			X11)
				MOZ_APP_REMOTINGNAME="$CLASS" \
				MOZ_DISABLE_CONTENT_SANDBOX=1 \
				MOZ_DISABLE_GMP_SANDBOX=1 \
				PATH="/usr/local/bin:/usr/bin" \
					exec $browser_default \
						--portable \
						--no-remote \
						--profile "$FOLDER" \
						--user-data-dir="$cache_dir" \
						--wmclass=$CLASS \
						--private-browsing $url
				;;
			WAYLAND)
				MOZ_ENABLE_WAYLAND=1	\
				MOZ_APP_REMOTINGNAME="$CLASS" \
				MOZ_DISABLE_CONTENT_SANDBOX=1 \
				MOZ_DISABLE_GMP_SANDBOX=1 \
				PATH="/usr/local/bin:/usr/bin" \
				exec $browser_default \
					--portable \
					--no-remote \
					--user-data-dir="$cache_dir" \
					--profile "$FOLDER" \
					--wmclass=$CLASS \
					--private-browsing $url
				;;
		esac
		;;

	opera)
		case "${_session^^}" in
			X11)
				MOZ_APP_REMOTINGNAME="$CLASS" \
				MOZ_DISABLE_CONTENT_SANDBOX=1 \
				MOZ_DISABLE_GMP_SANDBOX=1 \
				PATH="/usr/local/bin:/usr/bin" \
					exec $browser_default \
						--portable \
						--no-remote \
						--profile-directory=Default \
						--wmclass=$CLASS \
						--private-browsing $url
				;;
			WAYLAND)
				MOZ_ENABLE_WAYLAND=1	\
				MOZ_APP_REMOTINGNAME="$CLASS" \
				MOZ_DISABLE_CONTENT_SANDBOX=1 \
				MOZ_DISABLE_GMP_SANDBOX=1 \
				PATH="/usr/local/bin:/usr/bin" \
				exec $browser_default \
					--portable \
					--no-remote \
					--profile-directory=Default \
					--wmclass=$CLASS \
					--private-browsing $url
				;;
		esac
		;;
	palemoon)
		cp -av "$WEBAPPS_PATH"/profile/xulstore.json "$FOLDER"
		cp -av "$WEBAPPS_PATH"/profile/prefs.js "$FOLDER"
		case "${_session^^}" in
			X11)
				MOZ_APP_REMOTINGNAME="$CLASS" \
				MOZ_DISABLE_CONTENT_SANDBOX=1 \
				MOZ_DISABLE_GMP_SANDBOX=1 \
				PATH="/usr/local/bin:/usr/bin" \
					exec $browser_default \
						--no-remote \
						--profile "$FOLDER" \
						--new-instance \
						--user-data-dir=$cache_dir \
						--new-tab $url
				;;
			WAYLAND)
				MOZ_ENABLE_WAYLAND=1	\
				PATH="/usr/local/bin:/usr/bin" \
				exec $browser_default \
					--no-remote \
					--profile "$FOLDER" \
					--new-instance \
					--user-data-dir=$cache_dir \
					--new-tab $url
				;;
		esac
		;;
	*)
		line_exec=" --user-data-dir=$cache_dir $parameters"
		case "${_session^^}" in
			X11)
				line_exec="${line_exec/,Chromium-browser/}"
			;;
			WAYLAND)
				:
			;;
		esac
		PATH="/usr/local/bin:/usr/bin" exec $browser_default $line_exec
		;;
	esac
}
export -f sh_biglinux_webapp_main

sh_biglinux_webapp_main "$@"
