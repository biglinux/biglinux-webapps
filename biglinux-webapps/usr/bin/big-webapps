#!/usr/bin/env bash

display_help() {
    echo "This script manages WebApps by creating, editing, or removing .desktop files for specified browsers and URLs."
    echo ""
    echo "Usage:"
    echo "  $0 {create|edit|remove} <browser> <name> <url> <icon> <category> <profile>"
    echo ""
    echo "Commands:"
    echo "  create   - Creates a new WebApp .desktop file"
    echo "  edit     - Edits an existing WebApp .desktop file"
    echo "  remove   - Removes an existing WebApp .desktop file"
    echo ""
    echo "Arguments:"
    echo "  <browser>  - The browser to use (e.g., google-chrome-stable, brave-browser)"
    echo "  <name>     - The display name of the WebApp"
    echo "  <url>      - The URL of the WebApp"
    echo "  <icon>     - The icon for the WebApp"
    echo "  <category> - The category for the WebApp"
    echo "  <profile>  - The profile directory to use"
    echo ""
    echo "Examples:"
    echo "  Create a WebApp:"
    echo "    $0 create google-chrome-stable \"BigLinux\" \"https://www.biglinux.com.br\" \"big-logo\" \"Webapps\" \"Default\""
    echo ""
    echo "  Verify if exist webapp with desktop name to use icon in wayland:"
    echo "  Not is possible to use different icon in wayland for addresses with same site"
    echo "    $0 verify google-chrome-stable \"BigLinux\" \"https://www.biglinux.com.br\" \"new-icon\" \"Webapps\" \"Default\""
    echo ""
    echo "  Remove an existing WebApp:"
    echo "    $0 remove google-chrome-stable \"https://www.biglinux.com.br\" \"Default\""
}

# Check for minimum arguments
if [ "$#" -lt 1 ]; then
    display_help
    exit 1
fi

# Main command
command="$1"
shift

# Set global variables
browser="$1"
name="$2"
url="$3"
icon="$4"
category="$5"
profile="$6"

# Adjust the browser name for the filename and class
short_browser=$(echo "$browser" |
    sed 's/.*[Cc]hrom.*/chrome/
        s/.*[Bb]rave.*/brave/
        s/.*[Ee]dge.*/msedge/
        s/.*[Vv]ivaldi.*/vivaldi/')

# Adjust the class by replacing "/" with "__" and removing https
class=$(echo "$url" | sed 's|https://||;s|http://||g;s|/|__|g')

# Define the filename in Wayland compatible format
filename="$short_browser-$(echo $url | sed 's|https://||;s|http://||;s|?.*||g;s|/|__|g')__-$profile.desktop"

# Ensure filename doesn't end with more than two underscores and replace final __-profile with -profile
filename=$(echo "$filename" | sed -E "s/(__.*)__-$profile/\1-$profile/g")

# Verify if the WebApp already exists
if [[ -e ~/.local/share/applications/$filename ]]; then

    # If the WebApp already exists, add BigWebApp1 or first available number
    i=1
    filename_orig=$filename
    while [[ -e ~/.local/share/applications/$filename ]]; do
        i=$((i + 1))
        filename="${filename_orig/.desktop/}-BigWebApp$i.desktop"
    done

fi

# Create
if [ "$command" = "create" ]; then
    if [ "$#" -ne 6 ]; then
        display_help
        exit 1
    fi

    # Create the .desktop file
    read -d $'' ShowText <<EOF
#!/usr/bin/env xdg-open
[Desktop Entry]
Version=1.0
Terminal=false
Type=Application
Name=$name
Exec=filename="$filename" big-webapps-exec $browser --class="$class" --profile-directory=$profile --app="$url"
Icon=$icon
StartupWMClass=$class
Categories=$category
StartupNotify=false
EOF

echo "$ShowText" > "$HOME/.local/share/applications/$filename"

echo "WebApp $name successfully created as $filename"

# Verify
elif [ "$command" = "verify" ]; then
    if [ "$#" -ne 6 ]; then
        display_help
        exit 1
    fi

    if [ -f ~/.local/share/applications/$filename_orig ]; then
        echo "true"
        exit 1
    else
        echo "false"
        exit 0
    fi

# Remove
elif [ "$command" = "remove" ]; then
    if [ "$#" -ne 3 ]; then
        display_help
        exit 1
    fi

    if [ -f ~/.local/share/applications/$filename ]; then
        rm ~/.local/share/applications/$filename
        echo "WebApp successfully removed!"
    else
        echo "WebApp not found!"
    fi

else
    echo "Invalid command: $command"
    display_help
    exit 1
fi
